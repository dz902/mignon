Start =
	Measure+

Measure "measure" =
	measureNumber:NonZeroInt "|" _ notes:Note+ _ "|"? _ {
		return {
			measureNumber: measureNumber,
			notes: notes
		}
	}

Note "note" =
	_ notes:(NoteGroup / NoteName) duration:Duration _ {
			if (Array.isArray(notes)) {
				notes = notes.reduce((r, v) => {
					r.push({
						name: v,
						duration: duration
					});

					return r;
				}, []);
			} else {
				notes = [{
					name: notes,
					duration: duration
				}];
			}
		
			return notes;
		}

NoteGroup "note-group" =
	head:(NoteName "-")+ tail:NoteName {
		var result = [];
	
		for (var i = 0; i < head.length; ++i) {
			result.push(head[i][0]);
		}

		result.push(tail);
		
		return result;
	}

NoteName "note-name" =
	name:[a-gA-G] accidental:[b#]? {
		accidental = accidental ? accidental : '';
		return name+accidental;
	}
	/ Rest

Rest "rest" =
	"o"

Duration =
	"/" duration:("32" / "16" / "8" / "4" / "2" / "1") { return duration; }

NonZeroInt =
	[1-9] Int* { return parseInt(text()); }

Int =
	[0-9]

_ =
	[ \s\t\r\n]*
